<div id="googlemap"></div>

<br />

<script type="text/javascript">	

	// Handle for the routes data to be added to the page
	var routesHandle = document.getElementById("distribution_routes");
	var routes = [];

	// All paths, for clearing map.
	var allOverlays = [];

	// Determine what functions to call based on if allowing drawing or not.
	var editing = false;
	if(document.getElementById("editing-field").textContent == "true") {
		editing = true;
	}

	var map, drawingManager;

	// Initiates the map 
	function initMap() {
		var defaultZoom = 17;
		var defaultCenter = new google.maps.LatLng(53.8008, -1.5491);

		// Create map and add controls
		var mapOptions = {
			center: defaultCenter,
			zoom: defaultZoom,
			mapTypeId: google.maps.MapTypeId.ROADMAP,
			scrollwheel: true,
			scaleControl: true
		};

		map = new google.maps.Map(document.getElementById('googlemap'), mapOptions);
		
		if(editing) {
			drawingManager = new google.maps.drawing.DrawingManager({
				drawingMode: google.maps.drawing.OverlayType.Polyline,
				drawingControl: true,
				drawingControlOptions: {
					position: google.maps.ControlPosition.TOP_CENTER,
					drawingModes: ['polyline'],
				},

				polylineOptions: {
					strokeColor: '#FFFF00',
					strokeOpacity: 0.5,
					strokeWeight: 10,
					clickable: false,
					editable: true,
					zIndex: 1
				}
			});

			drawingManager.setMap(map);
			console.log(editing);
		
			// Add a listener for the completed polyline event.
	  		google.maps.event.addListener(drawingManager, 'polylinecomplete', addLine);
		}
	
		displayPaths();
	}

	// Handles the saving of a polyline once it is completed.
	function addLine(polyline) {
		allOverlays.push(polyline);

		var path = polyline.getPath().getArray();
		var new_path = [];

		// Construct the new array of paths.
		for (var i = path.length - 1; i >= 0; i--) {
			new_path.push([path[i].lat(), path[i].lng()]);
		}

		routes.push(new_path); // Array of arrays [[lat, lng], [lat2, lng2]... ]
		routesHandle.value = JSON.stringify(routes);
	}

	// Fetches the paths from routes and displays them.
	function displayPaths() {
    	
    	if(routesHandle.value == "") {
    		return;
    	}

		routes = JSON.parse(routesHandle.value);
		
		// Now iterate through all the polylines and draw them on the map.
		for(var i = 0; i < routes.length; i++) {
			var newPath = [];
			for (var j = 0; j < routes[i].length; j++) {
				// routes[i][j] [[lat, lng], [lat2, lng2]...]
				newPath.push({ lat: routes[i][j][0], lng: routes[i][j][1] });
			}

			var poly = new google.maps.Polyline({
				path: newPath,
				strokeColor: '#FFFF00',
				strokeWeight: 10,
				strokeOpacity: 0.5,
				editable: false,
				clickable: false,
				zIndex: 5,
			});

			allOverlays.push(poly);
			poly.setMap(map);
		}
 	}

	// Removes the routes and clears the map.
	function clearMap() {
		routesHandle.value = "";
		routes = [];
		for (var i = allOverlays.length - 1; i >= 0; i--) {
			allOverlays[i].setMap(null);
		}

		allOverlays = [];
	}
	
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBHL2s9qdWZH4JXh0abnr9FJtAE_2A9GZQ&libraries=drawing&callback=initMap"
         async defer></script>

